apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.nameOverride | default .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.nameOverride | default .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.nameOverride | default .Chart.Name }}
    spec:
      containers:
      - name: {{ .Values.nameOverride | default .Chart.Name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.port }}
        env:
        - name: DB_HOST
          value: {{ .Values.postgresql.service.name }}
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: DB_USER
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: DB_PASS
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: DB_NAME
        - name: DB_PORT
          value: "5432"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgresql
  labels:
    app: {{ .Release.Name }}-postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgresql
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgresql
    spec:
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.registry }}/{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          ports:
            - containerPort: {{ .Values.postgresql.service.port }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: DB_PASS
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: DB_NAME
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}

---

# apiVersion: v1
# kind: Service
# metadata:
#   name: {{ .Release.Name }}-api
#   labels:
#     {{- include "api-chart.labels" . | nindent 4 }}
# spec:
#   type: {{ .Values.service.type }}
#   ports:
#     - port: {{ .Values.service.port }}
#       targetPort: {{ .Values.service.port }}
#       protocol: TCP
#       name: {{ .Values.service.portName }}
#   selector:
#     {{- include "api-chart.selectorLabels" . | nindent 4 }}

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.nameOverride | default .Chart.Name }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: 4000
      nodePort: {{ .Values.service.nodePort }}
  selector:
    app: {{ .Values.nameOverride | default .Chart.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgresql
  labels:
    app: {{ .Release.Name }}-postgresql
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.postgresql.service.port }}
      targetPort: {{ .Values.postgresql.service.port }}
      protocol: TCP
  selector:
    app: {{ .Release.Name }}-postgresql
